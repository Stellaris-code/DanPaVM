// X-Macro header
// Define 'INSTRUCTION' to your liking

INSTRUCTION(0x10, pop)
INSTRUCTION(0x11, pushi)
INSTRUCTION(0x12, pushf)
INSTRUCTION(0x13, pushs)
INSTRUCTION(0x14, pushl)
INSTRUCTION(0x15, pushg)
INSTRUCTION(0x16, movl)
INSTRUCTION(0x17, movg)
INSTRUCTION(0x18, copyl)
INSTRUCTION(0x19, dup)
INSTRUCTION(0x1A, getaddrl)
INSTRUCTION(0x1B, getaddrg)
INSTRUCTION(0x1C, cmov)
INSTRUCTION(0x1D, pushnull)
INSTRUCTION(0x1E, pushib)

INSTRUCTION(0x20, strlen)
INSTRUCTION(0x21, strcat)
INSTRUCTION(0x22, stradd)
INSTRUCTION(0x23, streq)

INSTRUCTION(0x30, jt)
INSTRUCTION(0x31, jf)
INSTRUCTION(0x32, jmp)
INSTRUCTION(0x33, call)
INSTRUCTION(0x34, calli)

INSTRUCTION(0x40, randi)
INSTRUCTION(0x42, randa)
INSTRUCTION(0x40, randi)
INSTRUCTION(0x41, randf)
INSTRUCTION(0x42, randa)
INSTRUCTION(0x43, pow)
INSTRUCTION(0x44, ln)
INSTRUCTION(0x45, log10)
INSTRUCTION(0x46, exp)
INSTRUCTION(0x47, sqrt)
INSTRUCTION(0x48, abs)
INSTRUCTION(0x49, fabs)
INSTRUCTION(0x4A, ceil)
INSTRUCTION(0x4B, floor)
INSTRUCTION(0x4C, rad2deg)
INSTRUCTION(0x4D, deg2rad)

INSTRUCTION(0x50, cos)
INSTRUCTION(0x51, sin)
INSTRUCTION(0x52, tan)
INSTRUCTION(0x53, acos)
INSTRUCTION(0x54, asin)
INSTRUCTION(0x55, atan)
INSTRUCTION(0x56, atan2)

INSTRUCTION(0x60, eql)
INSTRUCTION(0x61, neql)
INSTRUCTION(0x62, ltl)


INSTRUCTION(0x90, nop)

INSTRUCTION(0xA0, add)
INSTRUCTION(0xA1, sub)
INSTRUCTION(0xA2, mul)
INSTRUCTION(0xA3, idiv)
INSTRUCTION(0xA4, mod)
INSTRUCTION(0xA5, inc)
INSTRUCTION(0xA6, dec)
INSTRUCTION(0xA7, incl)
INSTRUCTION(0xA8, decl)
INSTRUCTION(0xA9, shl)
INSTRUCTION(0xAA, shr)

INSTRUCTION(0xB0, ret)

INSTRUCTION(0xC0, cvtf2i)
INSTRUCTION(0xC1, cvti2f)

INSTRUCTION(0xD0, alloc)
INSTRUCTION(0xD1, copy)
INSTRUCTION(0xD2, load)
INSTRUCTION(0xD3, store)
INSTRUCTION(0xD4, memsize)
INSTRUCTION(0xD5, memresize)
INSTRUCTION(0xD6, arraycat)
INSTRUCTION(0xD7, stackcpy)
INSTRUCTION(0xD8, find)
INSTRUCTION(0xD9, findi)
INSTRUCTION(0xDA, mkrange)

INSTRUCTION(0xE0, eq)
INSTRUCTION(0xE1, neq)
INSTRUCTION(0xE2, lt)



INSTRUCTION(0xE6, land)
INSTRUCTION(0xE7, lor)
INSTRUCTION(0xE8, lnot)
INSTRUCTION(0xE9, feq)

INSTRUCTION(0xF0, syscall)
INSTRUCTION(0xF1, chknotnul)
INSTRUCTION(0xF2, isnull)
INSTRUCTION(0xFF, brk)
